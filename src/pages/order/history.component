<can-component tag="pmo-order-history">
  <view>
    <can-import from="~/components/order/list.component" />
    <div class="order-history">
      <div class="order header">
        <address>Name / Address / Phone</address>
        <div class="items">Order</div>
        <div class="total">Total</div>
        <div class="actions">Action</div>
      </div>

      <pmo-order-list
        orders:from="this.statusNew"
        listTitle:raw="New Orders"
        status:raw="new"
        statusTitle:raw="New Order!"
        action:raw="preparing"
        actionTitle:raw="Preparing"
        emptyMessage:raw="No new orders"/>

      <pmo-order-list
        orders:from="this.statusPreparing"
        listTitle:raw="Preparing"
        status:raw="preparing"
        statusTitle:raw="Preparing"
        action:raw="delivery"
        actionTitle:raw="Out for delivery"
        emptyMessage:raw="No orders preparing"/>

      <pmo-order-list
        orders:from="this.statusDelivery"
        listTitle:raw="Out for delivery"
        status:raw="delivery"
        statusTitle:raw="Out for delivery"
        action:raw="delivered"
        actionTitle:raw="Delivered"
        emptyMessage:raw="No orders are being delivered"/>

      <pmo-order-list
        orders:from="this.statusDelivered"
        listTitle:raw="Delivered"
        status:raw="delivered"
        statusTitle:raw="Delivered"
        emptyMessage:raw="No delivered orders"/>
    </div>
  </view>
  <script type="view-model">
    import { DefineMap } from 'can';
    import Order from '~/models/order';

    export default DefineMap.extend("PmoOrderHistoryVM", {
      // EXTERNAL STATEFUL PROPERTIES
      // These properties are passed from another component. Example:
      // value: {type: "number"}

      // INTERNAL STATEFUL PROPERTIES
      // These properties are owned by this component.
      message: { default: "This is the pmo-order-history component" },

      // DERIVED PROPERTIES
      // These properties combine other property values. Example:
      // get valueAndMessage(){ return this.value + this.message; }
      get statusNew() {
        return Order.getList({ filter: { status: "new" }});
      },
      get statusPreparing() {
        return Order.getList({ filter: { status: "preparing" }});
      },
      get statusDelivery() {
        return Order.getList({ filter: { status: "delivery" }});
      },
      get statusDelivered() {
        return Order.getList({ filter: { status: "delivered" }});
      },

      // METHODS
      // Functions that can be called by the view. Example:
      // incrementValue() { this.value++; }

      // SIDE EFFECTS
      // The following is a good place to perform changes to the DOM
      // or do things that don't fit in to one of the areas above.
      connectedCallback(element){

      }
    });
  </script>
</can-component>